/* https://inf-ege.sdamgia.ru/problem?id=28035
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. 
Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу 
один или два камня или увеличить количество камней в куче в два раза. 
Например, имея кучу из 15 камней, за один ход можно получить кучу из 16, 17 или 30 камней. 
У каждого игрока, чтобы делать ходы, есть неограниченное количество камней.

Игра завершается в тот момент, когда количество камней в куче становится не менее 47. 
Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в которой будет 47 или больше камней.

В начальный момент в куче было S камней, 1 ≤ S ≤ 46.

Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. 
Описать стратегию игрока — значит, описать, какой ход он должен сделать в любой ситуации, 
которая ему может встретиться при различной игре противника.


№19
Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. 
Укажите минимальное значение S, когда такая ситуация возможна.*/

#include <bits/stdc++.h>
using namespace std;
int f(int x, int p){
	if ((x >= 47) || (p > 3)) return p == 3;
	return f(x + 1, p + 1) || f(x + 2, p + 1) || f(x * 2, p + 1);
}
int main(){
	for (int s = 1; s < 47; s++)
		if (f(s, 1)){
			cout << s;
			break;
	}
}


/*№20
Найдите два таких значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
— Петя не может выиграть за один ход;
— Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.*/

#include <bits/stdc++.h>
using namespace std;
int f(int x, int p){
	if ((x >= 47) || (p > 4)) return p == 4;
	if (p % 2 != 0)
		return f(x + 1, p + 1) || f(x + 2, p + 1) || f(x * 2, p + 1);
	else
		return f(x + 1, p + 1) && f(x + 2, p + 1) && f(x * 2, p + 1);
}
int main(){
	for (int s = 1; s < 47; s++)
		if (f(s, 1)) 
			cout << s;
}


/*№21
Найдите минимальное значение S, при котором одновременно выполняются два условия:
— у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
— у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.*/

#include <bits/stdc++.h>
using namespace std;
int f(int x, int p){
	if ((x >= 47) || (p > 5)) return p == 3 || p == 5;
	if (p % 2 == 0)
		return f(x + 1, p + 1) || f(x + 2, p + 1) || f(x * 2, p + 1);
	else
		return f(x + 1, p + 1) && f(x + 2, p + 1) && f(x * 2, p + 1);
}
int main(){
	for (int s = 1; s < 47; s++)
		if (f(s, 1)){
			cout << s;
			break;
		} 
}
