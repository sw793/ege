/*https://inf.reshuege.ru/problem?id=27829

Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. 
Игроки ходят по очереди, первый ход делает Петя. 
За один ход игрок может добавить в кучу один или два камня или 
увеличить количество камней в куче в три раза.

Игра завершается в тот момент, когда количество камней в куче становится не менее 74. 
Победителем считается игрок, сделавший последний ход, 
то есть первым получивший кучу, в которой будет 74 или больше камней. 
В начальный момент в куче было S камней, 1 ≤ S ≤ 73.

№19
Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. 
Укажите минимальное значение S, когда такая ситуация возможна.*/

#include <iostream>
using namespace std;
int f(int x, int p){
	if ( (x >= 74) || (p > 3)) return p == 3;	
	return f(x + 1, p + 1) || f(x + 2, p + 1) || f(x * 3, p + 1);	
}	
int main(){
	for (int s = 1; s < 74; s++)
		if (f(s, 1)){
			cout << s;
			break;
		} 
}



/*№20
Найдите три таких значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
— Петя не может выиграть за один ход;
— Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания без разделительных знаков.*/

#include <iostream>
using namespace std;
int f(int x, int p){
	if ( (x >= 74) || (p > 4)) return p == 4;	
	if (p % 2 != 0) return f(x + 1, p + 1) || f(x + 2, p + 1) || f(x * 3, p + 1);
	else return f(x + 1, p + 1) && f(x + 2, p + 1) && f(x * 3, p + 1); 
}	
int main(){
	for (int s = 1; s < 74; s++)
		if (f(s, 1)) cout << s;
}


/*№20
Найдите минимальное значение S, при котором одновременно выполняются два условия:
— у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
— у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.*/

#include <iostream>
using namespace std;
int f(int x, int p){
	if ( (x >= 74) || (p > 5)) return p == 3 || p == 5;
	if (p % 2 == 0) return f(x + 1, p + 1) || f(x + 2, p + 1) || f(x * 3, p + 1);
	else return f(x + 1, p + 1) && f(x + 2, p + 1) && f(x * 3, p + 1);
}	
int main(){
	for (int s = 1; s < 74; s++)
		if (f(s, 1)){
			cout << s;
			break;
		} 
}
