/*Дана последовательность из N натуральных чисел. 
Рассматриваются все её непрерывные подпоследовательности,
такие что сумма элементов каждой из них кратна k = 43. 
Найдите среди них подпоследовательность с максимальной суммой, 
определите её длину. Если таких подпоследовательностей найдено несколько, 
в ответе укажите количество элементов самой короткой из них.

Входные данные. Даны два входных файла (файл A и файл B), 
каждый из которых содержит в первой строке количество чисел N (2 ≤ N ≤ 108).
Каждая из следующих N строк содержит натуральное число, не превышающее 10000.
Пример входного файла:

7 21 13 9 19 17 26 95 

В этом наборе можно выбрать последовательности 21+13+9 (сумма 43) и 17+26 (сумма 43). Самая короткая из них, 17 + 26, имеет длину 2.

Ответ: 2.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.

https://www.kpolyakov.spb.ru/cms/files/ege-stream/75/27-75a.txt
https://www.kpolyakov.spb.ru/cms/files/ege-stream/75/27-75b.txt
*/

#include <iostream>
#include <vector>
using namespace std;
int main(){
	freopen("27-75b.txt", "r", stdin);
	int n, t;
	cin >> n;
	vector <pair <long long int, int>> min_pr(43, {2e18, -1});
	long long int pr = 0, max_razn = -2e18, R = -1, L_1 = -1;
	min_pr[0] = {0, 0};
	for (int i = 1; i < n + 1; i++){
		cin >> t;
		pr += t;
		if (min_pr[pr % 43].first != 2e18){
			if (pr - min_pr[pr % 43].first > max_razn){
				max_razn = pr - min_pr[pr % 43].first;
				R = i;
				L_1 = min_pr[pr % 43].second;
			}
			else if (pr - min_pr[pr % 43].first == max_razn){
				if (R - L_1 > i - min_pr[pr % 43].second){
					R = i;
					L_1 = min_pr[pr % 43].second;
				}
			}
		}
		if (pr <= min_pr[pr % 43].first) min_pr[pr % 43] = {pr, i};  
	}
	cout << R - L_1;
}
// 185 329329
